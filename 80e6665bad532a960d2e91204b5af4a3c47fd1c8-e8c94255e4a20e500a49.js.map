{"version":3,"file":"80e6665bad532a960d2e91204b5af4a3c47fd1c8-e8c94255e4a20e500a49.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicButton.module.css","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicButton.jsx","webpack://gatsby-starter-default/./src/components/Button.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicIconLink.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicIconLink.module.css","webpack://gatsby-starter-default/./src/components/IconLink.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__Icon.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__TwitterIcon.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__GithubIcon.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__FacebookIcon.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicFooter.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicFooter.module.css","webpack://gatsby-starter-default/./src/components/Footer.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicHeader.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicHeader.module.css","webpack://gatsby-starter-default/./src/components/Header.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicSection.module.css","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicSection.jsx","webpack://gatsby-starter-default/./src/components/Section.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicTextInput.module.css","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__Searchsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicTextInput.jsx","webpack://gatsby-starter-default/./src/components/TextInput.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/PlasmicGlobalVariant__Screen.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__Checksvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__Logo.jsx","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/icons/PlasmicIcon__RightArrow.jsx","webpack://gatsby-starter-default/./src/components/plasmic/library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css","webpack://gatsby-starter-default/./src/components/plasmic/simple_light_landing_page/plasmic_simple_light_landing_page.module.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var __wab_slot = \"PlasmicButton-module--__wab_slot--M6-GH\";\nexport var contentContainer = \"PlasmicButton-module--contentContainer--wRf6y\";\nexport var contentContainer___focusVisibleWithin = \"PlasmicButton-module--contentContainer___focusVisibleWithin--P9zZl\";\nexport var endIconContainer = \"PlasmicButton-module--endIconContainer--wVpn2\";\nexport var endIconContainershowEndIcon = \"PlasmicButton-module--endIconContainershowEndIcon--+YRCT\";\nexport var root = \"PlasmicButton-module--root--zAwrE\";\nexport var root___focusVisibleWithin = \"PlasmicButton-module--root___focusVisibleWithin--quYXR\";\nexport var rootcolor_blue = \"PlasmicButton-module--rootcolor_blue--4FhAG\";\nexport var rootcolor_clear = \"PlasmicButton-module--rootcolor_clear--eqWg8\";\nexport var rootcolor_outlineBlue = \"PlasmicButton-module--rootcolor_outlineBlue--wzFrO\";\nexport var rootcolor_outlineRed = \"PlasmicButton-module--rootcolor_outlineRed--4-yBC\";\nexport var rootcolor_red = \"PlasmicButton-module--rootcolor_red--BgUM0\";\nexport var rootisDisabled = \"PlasmicButton-module--rootisDisabled--8xIWd\";\nexport var rootshape_rounded = \"PlasmicButton-module--rootshape_rounded--3axy0\";\nexport var rootshowEndIcon = \"PlasmicButton-module--rootshowEndIcon--rvDq5\";\nexport var rootshowEndIcon_shape_rounded = \"PlasmicButton-module--rootshowEndIcon_shape_rounded--17O1X\";\nexport var rootshowEndIcon_size_compact = \"PlasmicButton-module--rootshowEndIcon_size_compact--Ed5Lu\";\nexport var rootshowStartIcon = \"PlasmicButton-module--rootshowStartIcon--wAt7H\";\nexport var rootshowStartIcon_shape_rounded = \"PlasmicButton-module--rootshowStartIcon_shape_rounded--1-pas\";\nexport var rootshowStartIcon_size_compact = \"PlasmicButton-module--rootshowStartIcon_size_compact--ANCwt\";\nexport var rootsize_compact = \"PlasmicButton-module--rootsize_compact--DNfwT\";\nexport var slotTargetChildren = \"PlasmicButton-module--slotTargetChildren--0o3gj\";\nexport var slotTargetChildren___focusVisibleWithin = \"PlasmicButton-module--slotTargetChildren___focusVisibleWithin--yu0Fm\";\nexport var slotTargetChildrencolor_blue = \"PlasmicButton-module--slotTargetChildrencolor_blue--ilU51\";\nexport var slotTargetChildrencolor_clear = \"PlasmicButton-module--slotTargetChildrencolor_clear--8qifE\";\nexport var slotTargetChildrencolor_outlineBlue = \"PlasmicButton-module--slotTargetChildrencolor_outlineBlue--oIGRi\";\nexport var slotTargetChildrencolor_outlineRed = \"PlasmicButton-module--slotTargetChildrencolor_outlineRed--AoInq\";\nexport var slotTargetChildrencolor_red = \"PlasmicButton-module--slotTargetChildrencolor_red--TqSVW\";\nexport var slotTargetEndIcon = \"PlasmicButton-module--slotTargetEndIcon--6FbeS\";\nexport var slotTargetEndIconcolor_outlineBlue = \"PlasmicButton-module--slotTargetEndIconcolor_outlineBlue--1WreW\";\nexport var slotTargetEndIconcolor_outlineRed = \"PlasmicButton-module--slotTargetEndIconcolor_outlineRed--b+ME3\";\nexport var slotTargetStartIcon = \"PlasmicButton-module--slotTargetStartIcon--3yPYM\";\nexport var slotTargetStartIconcolor_outlineBlue = \"PlasmicButton-module--slotTargetStartIconcolor_outlineBlue--TEtKW\";\nexport var slotTargetStartIconcolor_outlineRed = \"PlasmicButton-module--slotTargetStartIconcolor_outlineRed--qNbpI\";\nexport var startIconContainer = \"PlasmicButton-module--startIconContainer--fvyah\";\nexport var startIconContainershowStartIcon = \"PlasmicButton-module--startIconContainershowStartIcon--DSlr3\";\nexport var svg__c5019 = \"PlasmicButton-module--svg__c5019--sxFiS\";\nexport var svg__jmtrq = \"PlasmicButton-module--svg__jmtrq--E-BCH\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: wx6aoo7FZEXNn8vLYsSQDm\n// Component: jqiB88P53Q6rHE\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as pp from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  useTrigger,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: wx6aoo7FZEXNn8vLYsSQDm/projectcss\nimport * as sty from \"./PlasmicButton.module.css\" // plasmic-import: jqiB88P53Q6rHE/css\nimport ChecksvgIcon from \"./icons/PlasmicIcon__Checksvg\" // plasmic-import: JawdjrG6paZs8c/icon\n\nexport const PlasmicButton__VariantProps = new Array(\n  \"showStartIcon\",\n  \"showEndIcon\",\n  \"isDisabled\",\n  \"shape\",\n  \"size\",\n  \"color\"\n)\n\nexport const PlasmicButton__ArgProps = new Array(\n  \"children\",\n  \"startIcon\",\n  \"endIcon\",\n  \"link\"\n)\n\nfunction PlasmicButton__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const [isRootFocusVisibleWithin, triggerRootFocusVisibleWithinProps] =\n    useTrigger(\"useFocusVisibleWithin\", {\n      isTextInput: false,\n    })\n\n  const triggers = {\n    focusVisibleWithin_root: isRootFocusVisibleWithin,\n  }\n\n  return (\n    <p.Stack\n      as={\"button\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.button,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        plasmic_library_plasmic_color_type_css.plasmic_tokens,\n        sty.root,\n        {\n          [sty.root___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.rootcolor_blue]: hasVariant(variants, \"color\", \"blue\"),\n          [sty.rootcolor_clear]: hasVariant(variants, \"color\", \"clear\"),\n          [sty.rootcolor_outlineBlue]: hasVariant(\n            variants,\n            \"color\",\n            \"outlineBlue\"\n          ),\n\n          [sty.rootcolor_outlineRed]: hasVariant(\n            variants,\n            \"color\",\n            \"outlineRed\"\n          ),\n\n          [sty.rootcolor_red]: hasVariant(variants, \"color\", \"red\"),\n          [sty.rootisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.rootshape_rounded]: hasVariant(variants, \"shape\", \"rounded\"),\n          [sty.rootshowEndIcon]: hasVariant(\n            variants,\n            \"showEndIcon\",\n            \"showEndIcon\"\n          ),\n\n          [sty.rootshowEndIcon_shape_rounded]:\n            hasVariant(variants, \"showEndIcon\", \"showEndIcon\") &&\n            hasVariant(variants, \"shape\", \"rounded\"),\n          [sty.rootshowEndIcon_showStartIcon_size_compact]:\n            hasVariant(variants, \"size\", \"compact\") &&\n            hasVariant(variants, \"showStartIcon\", \"showStartIcon\") &&\n            hasVariant(variants, \"showEndIcon\", \"showEndIcon\"),\n          [sty.rootshowEndIcon_size_compact]:\n            hasVariant(variants, \"size\", \"compact\") &&\n            hasVariant(variants, \"showEndIcon\", \"showEndIcon\"),\n          [sty.rootshowStartIcon]: hasVariant(\n            variants,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n\n          [sty.rootshowStartIcon_shape_rounded]:\n            hasVariant(variants, \"shape\", \"rounded\") &&\n            hasVariant(variants, \"showStartIcon\", \"showStartIcon\"),\n          [sty.rootshowStartIcon_size_compact]:\n            hasVariant(variants, \"size\", \"compact\") &&\n            hasVariant(variants, \"showStartIcon\", \"showStartIcon\"),\n          [sty.rootsize_compact]: hasVariant(variants, \"size\", \"compact\"),\n          [sty.rootsize_compact_shape_rounded]:\n            hasVariant(variants, \"size\", \"compact\") &&\n            hasVariant(variants, \"shape\", \"rounded\"),\n        }\n      )}\n      data-plasmic-trigger-props={[triggerRootFocusVisibleWithinProps]}\n    >\n      {(\n        hasVariant(variants, \"showStartIcon\", \"showStartIcon\") ? true : false\n      ) ? (\n        <div\n          data-plasmic-name={\"startIconContainer\"}\n          data-plasmic-override={overrides.startIconContainer}\n          className={classNames(projectcss.all, sty.startIconContainer, {\n            [sty.startIconContainercolor_blue]: hasVariant(\n              variants,\n              \"color\",\n              \"blue\"\n            ),\n\n            [sty.startIconContainershowStartIcon]: hasVariant(\n              variants,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n\n            [sty.startIconContainershowStartIcon_shape_rounded]:\n              hasVariant(variants, \"shape\", \"rounded\") &&\n              hasVariant(variants, \"showStartIcon\", \"showStartIcon\"),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <ChecksvgIcon\n                className={classNames(projectcss.all, sty.svg__c5019)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.startIcon,\n            className: classNames(sty.slotTargetStartIcon, {\n              [sty.slotTargetStartIconcolor_blue]: hasVariant(\n                variants,\n                \"color\",\n                \"blue\"\n              ),\n\n              [sty.slotTargetStartIconcolor_outlineBlue]: hasVariant(\n                variants,\n                \"color\",\n                \"outlineBlue\"\n              ),\n\n              [sty.slotTargetStartIconcolor_outlineRed]: hasVariant(\n                variants,\n                \"color\",\n                \"outlineRed\"\n              ),\n\n              [sty.slotTargetStartIconshowStartIcon]: hasVariant(\n                variants,\n                \"showStartIcon\",\n                \"showStartIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n\n      <div\n        data-plasmic-name={\"contentContainer\"}\n        data-plasmic-override={overrides.contentContainer}\n        className={classNames(projectcss.all, sty.contentContainer, {\n          [sty.contentContainer___focusVisibleWithin]:\n            triggers.focusVisibleWithin_root,\n          [sty.contentContainerisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.contentContainershape_rounded]: hasVariant(\n            variants,\n            \"shape\",\n            \"rounded\"\n          ),\n\n          [sty.contentContainershowEndIcon]: hasVariant(\n            variants,\n            \"showEndIcon\",\n            \"showEndIcon\"\n          ),\n        })}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: \"Button\",\n          value: args.children,\n          className: classNames(sty.slotTargetChildren, {\n            [sty.slotTargetChildren___focusVisibleWithin]:\n              triggers.focusVisibleWithin_root,\n            [sty.slotTargetChildrencolor_blue]: hasVariant(\n              variants,\n              \"color\",\n              \"blue\"\n            ),\n\n            [sty.slotTargetChildrencolor_clear]: hasVariant(\n              variants,\n              \"color\",\n              \"clear\"\n            ),\n\n            [sty.slotTargetChildrencolor_outlineBlue]: hasVariant(\n              variants,\n              \"color\",\n              \"outlineBlue\"\n            ),\n\n            [sty.slotTargetChildrencolor_outlineRed]: hasVariant(\n              variants,\n              \"color\",\n              \"outlineRed\"\n            ),\n\n            [sty.slotTargetChildrencolor_red]: hasVariant(\n              variants,\n              \"color\",\n              \"red\"\n            ),\n\n            [sty.slotTargetChildrenisDisabled]: hasVariant(\n              variants,\n              \"isDisabled\",\n              \"isDisabled\"\n            ),\n\n            [sty.slotTargetChildrenshape_rounded]: hasVariant(\n              variants,\n              \"shape\",\n              \"rounded\"\n            ),\n\n            [sty.slotTargetChildrenshowEndIcon]: hasVariant(\n              variants,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n\n            [sty.slotTargetChildrenshowStartIcon]: hasVariant(\n              variants,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n          }),\n        })}\n      </div>\n\n      {(hasVariant(variants, \"showEndIcon\", \"showEndIcon\") ? true : false) ? (\n        <div\n          data-plasmic-name={\"endIconContainer\"}\n          data-plasmic-override={overrides.endIconContainer}\n          className={classNames(projectcss.all, sty.endIconContainer, {\n            [sty.endIconContainershowEndIcon]: hasVariant(\n              variants,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <ChecksvgIcon\n                className={classNames(projectcss.all, sty.svg__jmtrq)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.endIcon,\n            className: classNames(sty.slotTargetEndIcon, {\n              [sty.slotTargetEndIconcolor_outlineBlue]: hasVariant(\n                variants,\n                \"color\",\n                \"outlineBlue\"\n              ),\n\n              [sty.slotTargetEndIconcolor_outlineRed]: hasVariant(\n                variants,\n                \"color\",\n                \"outlineRed\"\n              ),\n\n              [sty.slotTargetEndIconshowEndIcon]: hasVariant(\n                variants,\n                \"showEndIcon\",\n                \"showEndIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n    </p.Stack>\n  )\n}\n\nfunction useBehavior(props, ref) {\n  const b = pp.useButton(\n    PlasmicButton,\n    props,\n    {\n      showStartIconVariant: {\n        group: \"showStartIcon\",\n        variant: \"showStartIcon\",\n      },\n\n      showEndIconVariant: { group: \"showEndIcon\", variant: \"showEndIcon\" },\n      isDisabledVariant: { group: \"isDisabled\", variant: \"isDisabled\" },\n      contentSlot: \"children\",\n      startIconSlot: \"startIcon\",\n      endIconSlot: \"endIcon\",\n      root: \"root\",\n    },\n\n    ref\n  )\n\n  if (b.plasmicProps.overrides.root.as === \"a\") {\n    b.plasmicProps.overrides.root.as = p.PlasmicLink\n    b.plasmicProps.overrides.root.props.component = Link\n    b.plasmicProps.overrides.root.props.platform = \"gatsby\"\n  }\n  return b\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"startIconContainer\", \"contentContainer\", \"endIconContainer\"],\n  startIconContainer: [\"startIconContainer\"],\n  contentContainer: [\"contentContainer\"],\n  endIconContainer: [\"endIconContainer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicButton__ArgProps,\n      internalVariantPropNames: PlasmicButton__VariantProps,\n    })\n\n    return PlasmicButton__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicButton\"\n  } else {\n    func.displayName = `PlasmicButton.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicButton = Object.assign(\n  // Top-level PlasmicButton renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    startIconContainer: makeNodeComponent(\"startIconContainer\"),\n    contentContainer: makeNodeComponent(\"contentContainer\"),\n    endIconContainer: makeNodeComponent(\"endIconContainer\"),\n    // Metadata about props expected for PlasmicButton\n    internalVariantProps: PlasmicButton__VariantProps,\n    internalArgProps: PlasmicButton__ArgProps,\n    useBehavior,\n  }\n)\n\nexport default PlasmicButton\n/* prettier-ignore-end */\n","import * as React from \"react\"\nimport { PlasmicButton } from \"./plasmic/simple_light_landing_page/PlasmicButton\"\n\nfunction Button_(props, ref) {\n  const { plasmicProps } = PlasmicButton.useBehavior(props, ref)\n  return <PlasmicButton {...plasmicProps} />\n}\n\nconst Button = React.forwardRef(Button_)\n\nexport default Object.assign(Button, {\n  __plumeType: \"button\",\n})\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: wx6aoo7FZEXNn8vLYsSQDm\n// Component: 3eeqB2Cq19Rpg\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: wx6aoo7FZEXNn8vLYsSQDm/projectcss\nimport * as sty from \"./PlasmicIconLink.module.css\" // plasmic-import: 3eeqB2Cq19Rpg/css\n\nexport const PlasmicIconLink__VariantProps = new Array()\n\nexport const PlasmicIconLink__ArgProps = new Array(\"icon\")\n\nfunction PlasmicIconLink__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        plasmic_library_plasmic_color_type_css.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <div\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        className={classNames(projectcss.all, sty.freeBox)}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: (\n            <svg\n              className={classNames(projectcss.all, sty.svg__lmMk)}\n              role={\"img\"}\n            />\n          ),\n\n          value: args.icon,\n          className: classNames(sty.slotTargetIcon),\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"freeBox\"],\n  freeBox: [\"freeBox\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicIconLink__ArgProps,\n      internalVariantPropNames: PlasmicIconLink__VariantProps,\n    })\n\n    return PlasmicIconLink__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicIconLink\"\n  } else {\n    func.displayName = `PlasmicIconLink.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicIconLink = Object.assign(\n  // Top-level PlasmicIconLink renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    freeBox: makeNodeComponent(\"freeBox\"),\n    // Metadata about props expected for PlasmicIconLink\n    internalVariantProps: PlasmicIconLink__VariantProps,\n    internalArgProps: PlasmicIconLink__ArgProps,\n  }\n)\n\nexport default PlasmicIconLink\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var freeBox = \"PlasmicIconLink-module--freeBox--cj3JY\";\nexport var root = \"PlasmicIconLink-module--root--W7IBg\";\nexport var slotTargetIcon = \"PlasmicIconLink-module--slotTargetIcon--QIlJ8\";\nexport var svg__lmMk = \"PlasmicIconLink-module--svg__lmMk--fugOM\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicIconLink } from \"./plasmic/simple_light_landing_page/PlasmicIconLink\"\n\nfunction IconLink_(props, ref) {\n  // Use PlasmicIconLink to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicIconLink are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all IconLinkProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicIconLink root={{ ref }} {...props} />\n}\n\nconst IconLink = React.forwardRef(IconLink_)\n\nexport default IconLink\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function IconIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      className={classNames(\n        \"plasmic-default__svg\",\n        className,\n        \"w-3 h-3 fill-current text-blue-600 mx-3 flex-shrink-0\"\n      )}\n      viewBox={\"0 0 12 12\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M11.707 5.293L7 .586 5.586 2l3 3H0v2h8.586l-3 3L7 11.414l4.707-4.707a1 1 0 000-1.414z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default IconIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function TwitterIconIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      className={classNames(\n        \"plasmic-default__svg\",\n        className,\n        \"w-8 h-8 fill-current\"\n      )}\n      viewBox={\"0 0 32 32\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M24 11.5c-.6.3-1.2.4-1.9.5.7-.4 1.2-1 1.4-1.8-.6.4-1.3.6-2.1.8-.6-.6-1.5-1-2.4-1-1.7 0-3.2 1.5-3.2 3.3 0 .3 0 .5.1.7-2.7-.1-5.2-1.4-6.8-3.4-.3.5-.4 1-.4 1.7 0 1.1.6 2.1 1.5 2.7-.5 0-1-.2-1.5-.4 0 1.6 1.1 2.9 2.6 3.2-.3.1-.6.1-.9.1-.2 0-.4 0-.6-.1.4 1.3 1.6 2.3 3.1 2.3-1.1.9-2.5 1.4-4.1 1.4H8c1.5.9 3.2 1.5 5 1.5 6 0 9.3-5 9.3-9.3v-.4c.7-.5 1.3-1.1 1.7-1.8z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default TwitterIconIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function GithubIconIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      className={classNames(\n        \"plasmic-default__svg\",\n        className,\n        \"w-8 h-8 fill-current\"\n      )}\n      viewBox={\"0 0 32 32\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M16 8.2c-4.4 0-8 3.6-8 8 0 3.5 2.3 6.5 5.5 7.6.4.1.5-.2.5-.4V22c-2.2.5-2.7-1-2.7-1-.4-.9-.9-1.2-.9-1.2-.7-.5.1-.5.1-.5.8.1 1.2.8 1.2.8.7 1.3 1.9.9 2.3.7.1-.5.3-.9.5-1.1-1.8-.2-3.6-.9-3.6-4 0-.9.3-1.6.8-2.1-.1-.2-.4-1 .1-2.1 0 0 .7-.2 2.2.8.6-.2 1.3-.3 2-.3s1.4.1 2 .3c1.5-1 2.2-.8 2.2-.8.4 1.1.2 1.9.1 2.1.5.6.8 1.3.8 2.1 0 3.1-1.9 3.7-3.7 3.9.3.4.6.9.6 1.6v2.2c0 .2.1.5.6.4 3.2-1.1 5.5-4.1 5.5-7.6-.1-4.4-3.7-8-8.1-8z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default GithubIconIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function FacebookIconIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      className={classNames(\n        \"plasmic-default__svg\",\n        className,\n        \"w-8 h-8 fill-current\"\n      )}\n      viewBox={\"0 0 32 32\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M14.023 24L14 17h-3v-3h3v-2c0-2.7 1.672-4 4.08-4 1.153 0 2.144.086 2.433.124v2.821h-1.67c-1.31 0-1.563.623-1.563 1.536V14H21l-1 3h-2.72v7h-3.257z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default FacebookIconIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: wx6aoo7FZEXNn8vLYsSQDm\n// Component: Z489008dJg24V\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport IconLink from \"../../IconLink\" // plasmic-import: 3eeqB2Cq19Rpg/component\nimport TextInput from \"../../TextInput\" // plasmic-import: fgkVFy0wrVWvCO/component\nimport Button from \"../../Button\" // plasmic-import: jqiB88P53Q6rHE/component\nimport { useScreenVariants as useScreenVariantskqRUdDzzQOAa } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: KqR-UdDzz-qOAa/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: wx6aoo7FZEXNn8vLYsSQDm/projectcss\nimport * as sty from \"./PlasmicFooter.module.css\" // plasmic-import: Z489008dJg24V/css\nimport LogoIcon from \"./icons/PlasmicIcon__Logo\" // plasmic-import: oGIIgq6g44-n8X/icon\nimport IconIcon from \"./icons/PlasmicIcon__Icon\" // plasmic-import: 7o1gsdODbHHZlc/icon\nimport TwitterIconIcon from \"./icons/PlasmicIcon__TwitterIcon\" // plasmic-import: uB14dyueeEsLUX/icon\nimport GithubIconIcon from \"./icons/PlasmicIcon__GithubIcon\" // plasmic-import: sPyPRBDgv9DY0L/icon\nimport FacebookIconIcon from \"./icons/PlasmicIcon__FacebookIcon\" // plasmic-import: 4jhqMNEEmsNCSy/icon\n\nexport const PlasmicFooter__VariantProps = new Array()\n\nexport const PlasmicFooter__ArgProps = new Array()\n\nfunction PlasmicFooter__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskqRUdDzzQOAa(),\n  })\n\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        plasmic_library_plasmic_color_type_css.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <div className={classNames(projectcss.all, sty.freeBox___1YaFh)} />\n\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__pnYfl)}\n      >\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(projectcss.all, sty.freeBox__zNpL1)}\n        >\n          <IconLink\n            className={classNames(\"__wab_instance\", sty.iconLink__g3N7V)}\n            icon={\n              <LogoIcon\n                className={classNames(projectcss.all, sty.svg__a16Wj)}\n                role={\"img\"}\n              />\n            }\n          />\n\n          <div className={classNames(projectcss.all, sty.freeBox__w6WQi)}>\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__mSsPq\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Terms\"}\n            </p.PlasmicLink>\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__tqoWg\n              )}\n            >\n              {\" · \"}\n            </div>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__pOmZ\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Privacy\"}\n            </p.PlasmicLink>\n          </div>\n        </p.Stack>\n\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(projectcss.all, sty.freeBox__mIdDt)}\n        >\n          <p.Stack\n            as={\"div\"}\n            hasGap={true}\n            className={classNames(projectcss.all, sty.freeBox__uwhaJ)}\n          >\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__c3KT7\n              )}\n            >\n              {\"Products\"}\n            </div>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__wjN9M\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Web Studio\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__ohGab\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"DynamicBox Flex\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link___0TiF\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Programming Forms\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__piSo\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Integrations\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__lHalh\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Command-line\"}\n            </p.PlasmicLink>\n          </p.Stack>\n\n          <p.Stack\n            as={\"div\"}\n            hasGap={true}\n            className={classNames(projectcss.all, sty.freeBox__rgOeZ)}\n          >\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__ikEiu\n              )}\n            >\n              {\"Resources\"}\n            </div>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__evAeS\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Documentation\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__yQaek\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Tutorials & Guides\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__zX8Nt\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Blog\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__iysS\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Support Center\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__csUOb\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Partners\"}\n            </p.PlasmicLink>\n          </p.Stack>\n\n          <p.Stack\n            as={\"div\"}\n            hasGap={true}\n            className={classNames(projectcss.all, sty.freeBox__hZnA2)}\n          >\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__x3479\n              )}\n            >\n              {\"Company\"}\n            </div>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__bo1Zc\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Home\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__x4Ox6\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"About us\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__uPxrV\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Company values\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__vBr8\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Pricing\"}\n            </p.PlasmicLink>\n\n            <p.PlasmicLink\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                projectcss.__wab_text,\n                sty.link__s1NkA\n              )}\n              component={Link}\n              href={\"#\"}\n              platform={\"gatsby\"}\n            >\n              {\"Privacy policy\"}\n            </p.PlasmicLink>\n          </p.Stack>\n\n          <p.Stack\n            as={\"div\"}\n            hasGap={true}\n            className={classNames(projectcss.all, sty.freeBox___6JzI)}\n          >\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__dLGX\n              )}\n            >\n              {\"Subscribe\"}\n            </div>\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__psjk6\n              )}\n            >\n              {\"Get the latest news and articles to your inbox every month.\"}\n            </div>\n\n            <TextInput\n              data-plasmic-name={\"textInput\"}\n              data-plasmic-override={overrides.textInput}\n              className={classNames(\"__wab_instance\", sty.textInput)}\n              endIcon={\n                <Button\n                  data-plasmic-name={\"button\"}\n                  data-plasmic-override={overrides.button}\n                  className={classNames(\"__wab_instance\", sty.button)}\n                  color={\"clear\"}\n                  size={\"compact\"}\n                  startIcon={\n                    <IconIcon\n                      className={classNames(projectcss.all, sty.svg__x5Ocx)}\n                      role={\"img\"}\n                    />\n                  }\n                >\n                  <IconIcon\n                    className={classNames(projectcss.all, sty.svg__bWuPy)}\n                    role={\"img\"}\n                  />\n                </Button>\n              }\n              fontSize={\"small\"}\n              placeholder={\"Your email\"}\n              showEndIcon={true}\n            />\n          </p.Stack>\n        </p.Stack>\n      </p.Stack>\n\n      <div className={classNames(projectcss.all, sty.freeBox__lcmHk)} />\n\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__j3HNg)}\n      >\n        <div className={classNames(projectcss.all, sty.freeBox__fBiEc)}>\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link___62ZpH\n            )}\n            component={Link}\n            href={\"https://cruip.com/\"}\n            platform={\"gatsby\"}\n          >\n            {\"Designed by Cruip. \"}\n          </p.PlasmicLink>\n\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              projectcss.__wab_text,\n              sty.link__nFseK\n            )}\n            component={Link}\n            href={\"https://www.plasmic.app/\"}\n            platform={\"gatsby\"}\n          >\n            {\"Built in Plasmic. \"}\n          </p.PlasmicLink>\n\n          <div\n            className={classNames(\n              projectcss.all,\n              projectcss.__wab_text,\n              sty.text__pcHkJ\n            )}\n          >\n            {\"All rights reserved.\"}\n          </div>\n        </div>\n\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(projectcss.all, sty.freeBox__hV6DS)}\n        >\n          <IconLink\n            className={classNames(\"__wab_instance\", sty.iconLink__xFbk)}\n            icon={\n              <TwitterIconIcon\n                className={classNames(projectcss.all, sty.svg__vkt89)}\n                role={\"img\"}\n              />\n            }\n          />\n\n          <IconLink\n            className={classNames(\"__wab_instance\", sty.iconLink__gCmp)}\n            icon={\n              <GithubIconIcon\n                className={classNames(projectcss.all, sty.svg__crHV)}\n                role={\"img\"}\n              />\n            }\n          />\n\n          <IconLink\n            className={classNames(\"__wab_instance\", sty.iconLink__cUgd)}\n            icon={\n              <FacebookIconIcon\n                className={classNames(projectcss.all, sty.svg__x3EV)}\n                role={\"img\"}\n              />\n            }\n          />\n        </p.Stack>\n      </p.Stack>\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"textInput\", \"textbox\", \"button\"],\n  textInput: [\"textInput\", \"textbox\", \"button\"],\n  button: [\"button\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicFooter__ArgProps,\n      internalVariantPropNames: PlasmicFooter__VariantProps,\n    })\n\n    return PlasmicFooter__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicFooter\"\n  } else {\n    func.displayName = `PlasmicFooter.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicFooter = Object.assign(\n  // Top-level PlasmicFooter renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    textInput: makeNodeComponent(\"textInput\"),\n    button: makeNodeComponent(\"button\"),\n    // Metadata about props expected for PlasmicFooter\n    internalVariantProps: PlasmicFooter__VariantProps,\n    internalArgProps: PlasmicFooter__ArgProps,\n  }\n)\n\nexport default PlasmicFooter\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicFooter-module--button--3cfDF\";\nexport var freeBox___1YaFh = \"PlasmicFooter-module--freeBox___1YaFh--nlPQN\";\nexport var freeBox___6JzI = \"PlasmicFooter-module--freeBox___6JzI--1Kocp\";\nexport var freeBox__fBiEc = \"PlasmicFooter-module--freeBox__fBiEc--nFuYe\";\nexport var freeBox__hV6DS = \"PlasmicFooter-module--freeBox__hV6DS--85O3S\";\nexport var freeBox__hZnA2 = \"PlasmicFooter-module--freeBox__hZnA2--zW7Lj\";\nexport var freeBox__j3HNg = \"PlasmicFooter-module--freeBox__j3HNg--m+PLd\";\nexport var freeBox__lcmHk = \"PlasmicFooter-module--freeBox__lcmHk--9jKny\";\nexport var freeBox__mIdDt = \"PlasmicFooter-module--freeBox__mIdDt--jBlcw\";\nexport var freeBox__pnYfl = \"PlasmicFooter-module--freeBox__pnYfl--HXV27\";\nexport var freeBox__rgOeZ = \"PlasmicFooter-module--freeBox__rgOeZ--PaNFB\";\nexport var freeBox__uwhaJ = \"PlasmicFooter-module--freeBox__uwhaJ--sB+WA\";\nexport var freeBox__w6WQi = \"PlasmicFooter-module--freeBox__w6WQi--KBCqr\";\nexport var freeBox__zNpL1 = \"PlasmicFooter-module--freeBox__zNpL1--A7ZcP\";\nexport var iconLink__cUgd = \"PlasmicFooter-module--iconLink__cUgd--mm1AQ\";\nexport var iconLink__g3N7V = \"PlasmicFooter-module--iconLink__g3N7V---A8-5\";\nexport var iconLink__gCmp = \"PlasmicFooter-module--iconLink__gCmp--BqWGe\";\nexport var iconLink__xFbk = \"PlasmicFooter-module--iconLink__xFbk--kX8eE\";\nexport var link___0TiF = \"PlasmicFooter-module--link___0TiF--20grZ\";\nexport var link___62ZpH = \"PlasmicFooter-module--link___62ZpH--IUPUB\";\nexport var link__bo1Zc = \"PlasmicFooter-module--link__bo1Zc--sIr+S\";\nexport var link__csUOb = \"PlasmicFooter-module--link__csUOb--kOlvI\";\nexport var link__evAeS = \"PlasmicFooter-module--link__evAeS--Rrzim\";\nexport var link__iysS = \"PlasmicFooter-module--link__iysS--2AW-z\";\nexport var link__lHalh = \"PlasmicFooter-module--link__lHalh--tAA6W\";\nexport var link__mSsPq = \"PlasmicFooter-module--link__mSsPq--JGa+U\";\nexport var link__nFseK = \"PlasmicFooter-module--link__nFseK--IeqBJ\";\nexport var link__ohGab = \"PlasmicFooter-module--link__ohGab--linvS\";\nexport var link__pOmZ = \"PlasmicFooter-module--link__pOmZ--Sx4Lb\";\nexport var link__piSo = \"PlasmicFooter-module--link__piSo--UUVFg\";\nexport var link__s1NkA = \"PlasmicFooter-module--link__s1NkA--DZCAz\";\nexport var link__uPxrV = \"PlasmicFooter-module--link__uPxrV--yhtA8\";\nexport var link__vBr8 = \"PlasmicFooter-module--link__vBr8--SSXD+\";\nexport var link__wjN9M = \"PlasmicFooter-module--link__wjN9M--WO1mw\";\nexport var link__x4Ox6 = \"PlasmicFooter-module--link__x4Ox6--c5fIY\";\nexport var link__yQaek = \"PlasmicFooter-module--link__yQaek--97TxJ\";\nexport var link__zX8Nt = \"PlasmicFooter-module--link__zX8Nt--0NBBy\";\nexport var root = \"PlasmicFooter-module--root--WcEx6\";\nexport var svg__a16Wj = \"PlasmicFooter-module--svg__a16Wj--4PNJU\";\nexport var svg__bWuPy = \"PlasmicFooter-module--svg__bWuPy--VjEtE\";\nexport var svg__crHV = \"PlasmicFooter-module--svg__crHV--6vDTM\";\nexport var svg__eDjsu = \"PlasmicFooter-module--svg__eDjsu--VjLTO\";\nexport var svg__vkt89 = \"PlasmicFooter-module--svg__vkt89--0evN5\";\nexport var svg__wDnzh = \"PlasmicFooter-module--svg__wDnzh--dKSQZ\";\nexport var svg__x3EV = \"PlasmicFooter-module--svg__x3EV--0NWMj\";\nexport var svg__x5Ocx = \"PlasmicFooter-module--svg__x5Ocx--pri1C\";\nexport var textInput = \"PlasmicFooter-module--textInput--UnyrH\";\nexport var text__c3KT7 = \"PlasmicFooter-module--text__c3KT7--tM6Xe\";\nexport var text__dLGX = \"PlasmicFooter-module--text__dLGX--5Jr-t\";\nexport var text__ikEiu = \"PlasmicFooter-module--text__ikEiu--3UOov\";\nexport var text__pcHkJ = \"PlasmicFooter-module--text__pcHkJ--3LSy8\";\nexport var text__psjk6 = \"PlasmicFooter-module--text__psjk6--k-fUR\";\nexport var text__tqoWg = \"PlasmicFooter-module--text__tqoWg--nqeCP\";\nexport var text__x3479 = \"PlasmicFooter-module--text__x3479--omfUw\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicFooter } from \"./plasmic/simple_light_landing_page/PlasmicFooter\"\n\nfunction Footer_(props, ref) {\n  // Use PlasmicFooter to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicFooter are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all FooterProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicFooter root={{ ref }} {...props} />\n}\n\nconst Footer = React.forwardRef(Footer_)\n\nexport default Footer\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: wx6aoo7FZEXNn8vLYsSQDm\n// Component: -Vb13Wx76lxLk\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: jqiB88P53Q6rHE/component\nimport { useScreenVariants as useScreenVariantskqRUdDzzQOAa } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: KqR-UdDzz-qOAa/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: wx6aoo7FZEXNn8vLYsSQDm/projectcss\nimport * as sty from \"./PlasmicHeader.module.css\" // plasmic-import: -Vb13Wx76lxLk/css\nimport LogoIcon from \"./icons/PlasmicIcon__Logo\" // plasmic-import: oGIIgq6g44-n8X/icon\nimport RightArrowIcon from \"./icons/PlasmicIcon__RightArrow\" // plasmic-import: DYgliUKpZC2lsC/icon\n\nexport const PlasmicHeader__VariantProps = new Array()\n\nexport const PlasmicHeader__ArgProps = new Array()\n\nfunction PlasmicHeader__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantskqRUdDzzQOAa(),\n  })\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        plasmic_library_plasmic_color_type_css.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.PlasmicLink\n        data-plasmic-name={\"link\"}\n        data-plasmic-override={overrides.link}\n        className={classNames(projectcss.all, projectcss.a, sty.link)}\n        component={Link}\n        href={\"/\"}\n        platform={\"gatsby\"}\n      >\n        <LogoIcon\n          className={classNames(projectcss.all, sty.svg__trtV3)}\n          role={\"img\"}\n        />\n      </p.PlasmicLink>\n\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox)}\n      >\n        <Button\n          className={classNames(\"__wab_instance\", sty.button___2CgBz)}\n          color={\"clear\"}\n          link={\"/features\"}\n          size={\"compact\"}\n        >\n          {\"Features\"}\n        </Button>\n\n        <Button\n          className={classNames(\"__wab_instance\", sty.button___87LKg)}\n          color={\"clear\"}\n          link={\"/pricing\"}\n          size={\"compact\"}\n        >\n          {\"Pricing\"}\n        </Button>\n\n        <Button\n          className={classNames(\"__wab_instance\", sty.button__ttJw)}\n          color={\"clear\"}\n          size={\"compact\"}\n        >\n          {\"Sign in\"}\n        </Button>\n\n        {(hasVariant(globalVariants, \"screen\", \"mobile\") ? true : true) ? (\n          <Button\n            className={classNames(\"__wab_instance\", sty.button___5UxE)}\n            endIcon={\n              <RightArrowIcon\n                className={classNames(projectcss.all, sty.svg__p5T1A)}\n                role={\"img\"}\n              />\n            }\n            showEndIcon={true}\n          >\n            {\"Sign up\"}\n          </Button>\n        ) : null}\n      </p.Stack>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"link\", \"freeBox\"],\n  link: [\"link\"],\n  freeBox: [\"freeBox\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHeader__ArgProps,\n      internalVariantPropNames: PlasmicHeader__VariantProps,\n    })\n\n    return PlasmicHeader__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeader\"\n  } else {\n    func.displayName = `PlasmicHeader.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeader = Object.assign(\n  // Top-level PlasmicHeader renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    link: makeNodeComponent(\"link\"),\n    freeBox: makeNodeComponent(\"freeBox\"),\n    // Metadata about props expected for PlasmicHeader\n    internalVariantProps: PlasmicHeader__VariantProps,\n    internalArgProps: PlasmicHeader__ArgProps,\n  }\n)\n\nexport default PlasmicHeader\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button___2CgBz = \"PlasmicHeader-module--button___2CgBz--s31QF\";\nexport var button___5UxE = \"PlasmicHeader-module--button___5UxE--R7v4V\";\nexport var button___87LKg = \"PlasmicHeader-module--button___87LKg--yfVNb\";\nexport var button__ttJw = \"PlasmicHeader-module--button__ttJw--Z8DTf\";\nexport var freeBox = \"PlasmicHeader-module--freeBox--IYgNi\";\nexport var link = \"PlasmicHeader-module--link--vJ-gB\";\nexport var root = \"PlasmicHeader-module--root--BZ7Rd\";\nexport var svg__ap78H = \"PlasmicHeader-module--svg__ap78H--RGdnO\";\nexport var svg__lI2Be = \"PlasmicHeader-module--svg__lI2Be--UrNes\";\nexport var svg__oYhKd = \"PlasmicHeader-module--svg__oYhKd--YUGPf\";\nexport var svg__ogAzv = \"PlasmicHeader-module--svg__ogAzv--NY-dZ\";\nexport var svg__p5T1A = \"PlasmicHeader-module--svg__p5T1A--1RIt4\";\nexport var svg__r8Pz4 = \"PlasmicHeader-module--svg__r8Pz4--Lu47p\";\nexport var svg__trtV3 = \"PlasmicHeader-module--svg__trtV3--ytDUz\";\nexport var svg__x55Dm = \"PlasmicHeader-module--svg__x55Dm--zRCOJ\";\nexport var svg__yGbAt = \"PlasmicHeader-module--svg__yGbAt--mftMW\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHeader } from \"./plasmic/simple_light_landing_page/PlasmicHeader\"\n\nfunction Header_(props, ref) {\n  // Use PlasmicHeader to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeader are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeaderProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHeader root={{ ref }} {...props} />\n}\n\nconst Header = React.forwardRef(Header_)\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nexport var content = \"PlasmicSection-module--content--OT3jB\";\nexport var contentContainer = \"PlasmicSection-module--contentContainer--1nAGb\";\nexport var contentContainerhasSubtitle = \"PlasmicSection-module--contentContainerhasSubtitle--ssy6N\";\nexport var contentContainerhasSubtitle_hasTitle = \"PlasmicSection-module--contentContainerhasSubtitle_hasTitle--xrNKQ\";\nexport var contentContainerhasTitle = \"PlasmicSection-module--contentContainerhasTitle--1cn8z\";\nexport var root = \"PlasmicSection-module--root--x4DBA\";\nexport var rootcolor_dark = \"PlasmicSection-module--rootcolor_dark--tYjXj\";\nexport var rootcolor_halfDark = \"PlasmicSection-module--rootcolor_halfDark--hoUYe\";\nexport var slotTargetSubtitle = \"PlasmicSection-module--slotTargetSubtitle--yCViG\";\nexport var slotTargetTitle = \"PlasmicSection-module--slotTargetTitle--oDxjf\";\nexport var subtitleContainer = \"PlasmicSection-module--subtitleContainer--miyY3\";\nexport var subtitleContainerhasSubtitle = \"PlasmicSection-module--subtitleContainerhasSubtitle--axOU8\";\nexport var titleContainer = \"PlasmicSection-module--titleContainer--sjqNz\";\nexport var titleContainerhasTitle = \"PlasmicSection-module--titleContainerhasTitle--yIYYY\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: wx6aoo7FZEXNn8vLYsSQDm\n// Component: pJhvut2uXEQ_GY\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: wx6aoo7FZEXNn8vLYsSQDm/projectcss\nimport * as sty from \"./PlasmicSection.module.css\" // plasmic-import: pJhvut2uXEQ_GY/css\n\nexport const PlasmicSection__VariantProps = new Array(\n  \"color\",\n  \"hasTitle\",\n  \"hasSubtitle\"\n)\n\nexport const PlasmicSection__ArgProps = new Array(\n  \"children\",\n  \"subtitle\",\n  \"title\"\n)\n\nfunction PlasmicSection__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        plasmic_library_plasmic_color_type_css.plasmic_tokens,\n        sty.root,\n        {\n          [sty.rootcolor_dark]: hasVariant(variants, \"color\", \"dark\"),\n          [sty.rootcolor_halfDark]: hasVariant(variants, \"color\", \"halfDark\"),\n          [sty.roothasSubtitle]: hasVariant(\n            variants,\n            \"hasSubtitle\",\n            \"hasSubtitle\"\n          ),\n        }\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"content\"}\n        data-plasmic-override={overrides.content}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.content, {\n          [sty.contentcolor_halfDark]: hasVariant(\n            variants,\n            \"color\",\n            \"halfDark\"\n          ),\n\n          [sty.contenthasSubtitle]: hasVariant(\n            variants,\n            \"hasSubtitle\",\n            \"hasSubtitle\"\n          ),\n\n          [sty.contenthasTitle]: hasVariant(variants, \"hasTitle\", \"hasTitle\"),\n        })}\n      >\n        {(hasVariant(variants, \"hasTitle\", \"hasTitle\") ? true : true) ? (\n          <div\n            data-plasmic-name={\"titleContainer\"}\n            data-plasmic-override={overrides.titleContainer}\n            className={classNames(projectcss.all, sty.titleContainer, {\n              [sty.titleContainerhasTitle]: hasVariant(\n                variants,\n                \"hasTitle\",\n                \"hasTitle\"\n              ),\n            })}\n          >\n            {p.renderPlasmicSlot({\n              defaultContents: \"Title\",\n              value: args.title,\n              className: classNames(sty.slotTargetTitle),\n            })}\n          </div>\n        ) : null}\n        {(hasVariant(variants, \"hasSubtitle\", \"hasSubtitle\") ? true : true) ? (\n          <div\n            data-plasmic-name={\"subtitleContainer\"}\n            data-plasmic-override={overrides.subtitleContainer}\n            className={classNames(projectcss.all, sty.subtitleContainer, {\n              [sty.subtitleContainerhasSubtitle]: hasVariant(\n                variants,\n                \"hasSubtitle\",\n                \"hasSubtitle\"\n              ),\n            })}\n          >\n            {p.renderPlasmicSlot({\n              defaultContents: \"Subtitle\",\n              value: args.subtitle,\n              className: classNames(sty.slotTargetSubtitle),\n            })}\n          </div>\n        ) : null}\n\n        <div\n          data-plasmic-name={\"contentContainer\"}\n          data-plasmic-override={overrides.contentContainer}\n          className={classNames(projectcss.all, sty.contentContainer, {\n            [sty.contentContainerhasSubtitle]: hasVariant(\n              variants,\n              \"hasSubtitle\",\n              \"hasSubtitle\"\n            ),\n\n            [sty.contentContainerhasSubtitle_hasTitle]:\n              hasVariant(variants, \"hasTitle\", \"hasTitle\") &&\n              hasVariant(variants, \"hasSubtitle\", \"hasSubtitle\"),\n            [sty.contentContainerhasTitle]: hasVariant(\n              variants,\n              \"hasTitle\",\n              \"hasTitle\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: null,\n            value: args.children,\n          })}\n        </div>\n      </p.Stack>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"content\",\n    \"titleContainer\",\n    \"subtitleContainer\",\n    \"contentContainer\",\n  ],\n\n  content: [\n    \"content\",\n    \"titleContainer\",\n    \"subtitleContainer\",\n    \"contentContainer\",\n  ],\n\n  titleContainer: [\"titleContainer\"],\n  subtitleContainer: [\"subtitleContainer\"],\n  contentContainer: [\"contentContainer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicSection__ArgProps,\n      internalVariantPropNames: PlasmicSection__VariantProps,\n    })\n\n    return PlasmicSection__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicSection\"\n  } else {\n    func.displayName = `PlasmicSection.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicSection = Object.assign(\n  // Top-level PlasmicSection renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    content: makeNodeComponent(\"content\"),\n    titleContainer: makeNodeComponent(\"titleContainer\"),\n    subtitleContainer: makeNodeComponent(\"subtitleContainer\"),\n    contentContainer: makeNodeComponent(\"contentContainer\"),\n    // Metadata about props expected for PlasmicSection\n    internalVariantProps: PlasmicSection__VariantProps,\n    internalArgProps: PlasmicSection__ArgProps,\n  }\n)\n\nexport default PlasmicSection\n/* prettier-ignore-end */\n","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicSection } from \"./plasmic/simple_light_landing_page/PlasmicSection\"\n\nfunction Section_(props, ref) {\n  // Use PlasmicSection to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicSection are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all SectionProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicSection root={{ ref }} {...props} />\n}\n\nconst Section = React.forwardRef(Section_)\n\nexport default Section\n","// extracted by mini-css-extract-plugin\nexport var endIconContainer = \"PlasmicTextInput-module--endIconContainer--6Bddh\";\nexport var endIconContainershowEndIcon = \"PlasmicTextInput-module--endIconContainershowEndIcon--iNibt\";\nexport var input = \"PlasmicTextInput-module--input--U8Y0i\";\nexport var input___focusVisibleWithin = \"PlasmicTextInput-module--input___focusVisibleWithin--AZj6r\";\nexport var inputcolor_dark = \"PlasmicTextInput-module--inputcolor_dark--iBCZk\";\nexport var inputfontSize_small = \"PlasmicTextInput-module--inputfontSize_small--cvaoR\";\nexport var inputisDisabled = \"PlasmicTextInput-module--inputisDisabled--UTQHl\";\nexport var root = \"PlasmicTextInput-module--root--xU0x6\";\nexport var root___focusVisibleWithin = \"PlasmicTextInput-module--root___focusVisibleWithin--rf5fO\";\nexport var rootcolor_dark = \"PlasmicTextInput-module--rootcolor_dark--Ok3bh\";\nexport var slotTargetEndIconshowEndIcon = \"PlasmicTextInput-module--slotTargetEndIconshowEndIcon--TwRuN\";\nexport var slotTargetStartIconshowStartIcon = \"PlasmicTextInput-module--slotTargetStartIconshowStartIcon--BXsqs\";\nexport var startIconContainer = \"PlasmicTextInput-module--startIconContainer--g-rAz\";\nexport var startIconContainer___focusVisibleWithin = \"PlasmicTextInput-module--startIconContainer___focusVisibleWithin--Fgu-j\";\nexport var startIconContainershowStartIcon = \"PlasmicTextInput-module--startIconContainershowStartIcon--p3rOS\";\nexport var svg__adcjc = \"PlasmicTextInput-module--svg__adcjc--lYnn3\";\nexport var svg__ia7Xo = \"PlasmicTextInput-module--svg__ia7Xo--cfK3u\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function SearchsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        stroke={\"currentColor\"}\n        strokeLinecap={\"round\"}\n        strokeLinejoin={\"round\"}\n        strokeWidth={\"1.5\"}\n        d={\n          \"M19.25 19.25L15.5 15.5M4.75 11a6.25 6.25 0 1112.5 0 6.25 6.25 0 01-12.5 0z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default SearchsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: wx6aoo7FZEXNn8vLYsSQDm\n// Component: fgkVFy0wrVWvCO\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as pp from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  useTrigger,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as plasmic_library_plasmic_color_type_css from \"../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css\" // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss\nimport * as projectcss from \"./plasmic_simple_light_landing_page.module.css\" // plasmic-import: wx6aoo7FZEXNn8vLYsSQDm/projectcss\nimport * as sty from \"./PlasmicTextInput.module.css\" // plasmic-import: fgkVFy0wrVWvCO/css\nimport SearchsvgIcon from \"./icons/PlasmicIcon__Searchsvg\" // plasmic-import: Xl1C6XWRgUq2yk/icon\nimport ChecksvgIcon from \"./icons/PlasmicIcon__Checksvg\" // plasmic-import: JawdjrG6paZs8c/icon\n\nexport const PlasmicTextInput__VariantProps = new Array(\n  \"showStartIcon\",\n  \"showEndIcon\",\n  \"isDisabled\",\n  \"color\",\n  \"fontSize\"\n)\n\nexport const PlasmicTextInput__ArgProps = new Array(\n  \"value\",\n  \"placeholder\",\n  \"endIcon\",\n  \"startIcon\"\n)\n\nfunction PlasmicTextInput__RenderFunc(props) {\n  const { variants, args, overrides, forNode } = props\n  const $props = props.args\n  const [isRootFocusVisibleWithin, triggerRootFocusVisibleWithinProps] =\n    useTrigger(\"useFocusVisibleWithin\", {\n      isTextInput: true,\n    })\n\n  const triggers = {\n    focusVisibleWithin_root: isRootFocusVisibleWithin,\n  }\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        plasmic_library_plasmic_color_type_css.plasmic_tokens,\n        sty.root,\n        {\n          [sty.root___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.rootcolor_dark]: hasVariant(variants, \"color\", \"dark\"),\n          [sty.rootfontSize_small]: hasVariant(variants, \"fontSize\", \"small\"),\n          [sty.rootisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.rootshowStartIcon]: hasVariant(\n            variants,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n        }\n      )}\n      data-plasmic-trigger-props={[triggerRootFocusVisibleWithinProps]}\n    >\n      {(\n        hasVariant(variants, \"showStartIcon\", \"showStartIcon\") ? true : true\n      ) ? (\n        <div\n          data-plasmic-name={\"startIconContainer\"}\n          data-plasmic-override={overrides.startIconContainer}\n          className={classNames(projectcss.all, sty.startIconContainer, {\n            [sty.startIconContainer___focusVisibleWithin]:\n              triggers.focusVisibleWithin_root,\n            [sty.startIconContainerisDisabled]: hasVariant(\n              variants,\n              \"isDisabled\",\n              \"isDisabled\"\n            ),\n\n            [sty.startIconContainershowStartIcon]: hasVariant(\n              variants,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <SearchsvgIcon\n                className={classNames(projectcss.all, sty.svg__ia7Xo)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.startIcon,\n            className: classNames(sty.slotTargetStartIcon, {\n              [sty.slotTargetStartIconshowStartIcon]: hasVariant(\n                variants,\n                \"showStartIcon\",\n                \"showStartIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n\n      <input\n        data-plasmic-name={\"input\"}\n        data-plasmic-override={overrides.input}\n        className={classNames(projectcss.all, projectcss.input, sty.input, {\n          [sty.input___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.inputcolor_dark]: hasVariant(variants, \"color\", \"dark\"),\n          [sty.inputfontSize_small]: hasVariant(variants, \"fontSize\", \"small\"),\n          [sty.inputisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.inputshowStartIcon]: hasVariant(\n            variants,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n        })}\n        disabled={\n          hasVariant(variants, \"isDisabled\", \"isDisabled\") ? true : undefined\n        }\n        placeholder={\n          args.placeholder !== undefined ? args.placeholder : \"Enter something…\"\n        }\n        type={\"text\"}\n        value={args.value}\n      />\n\n      {(hasVariant(variants, \"showEndIcon\", \"showEndIcon\") ? true : true) ? (\n        <div\n          data-plasmic-name={\"endIconContainer\"}\n          data-plasmic-override={overrides.endIconContainer}\n          className={classNames(projectcss.all, sty.endIconContainer, {\n            [sty.endIconContainershowEndIcon]: hasVariant(\n              variants,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <ChecksvgIcon\n                className={classNames(projectcss.all, sty.svg__adcjc)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.endIcon,\n            className: classNames(sty.slotTargetEndIcon, {\n              [sty.slotTargetEndIconshowEndIcon]: hasVariant(\n                variants,\n                \"showEndIcon\",\n                \"showEndIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nfunction useBehavior(props, ref) {\n  return pp.useTextInput(\n    PlasmicTextInput,\n    props,\n    {\n      showStartIconVariant: {\n        group: \"showStartIcon\",\n        variant: \"showStartIcon\",\n      },\n\n      showEndIconVariant: { group: \"showEndIcon\", variant: \"showEndIcon\" },\n      isDisabledVariant: { group: \"isDisabled\", variant: \"isDisabled\" },\n      startIconSlot: \"startIcon\",\n      endIconSlot: \"endIcon\",\n      root: \"root\",\n      input: \"input\",\n    },\n\n    ref\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"startIconContainer\", \"input\", \"endIconContainer\"],\n  startIconContainer: [\"startIconContainer\"],\n  input: [\"input\"],\n  endIconContainer: [\"endIconContainer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicTextInput__ArgProps,\n      internalVariantPropNames: PlasmicTextInput__VariantProps,\n    })\n\n    return PlasmicTextInput__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicTextInput\"\n  } else {\n    func.displayName = `PlasmicTextInput.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicTextInput = Object.assign(\n  // Top-level PlasmicTextInput renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    startIconContainer: makeNodeComponent(\"startIconContainer\"),\n    input: makeNodeComponent(\"input\"),\n    endIconContainer: makeNodeComponent(\"endIconContainer\"),\n    // Metadata about props expected for PlasmicTextInput\n    internalVariantProps: PlasmicTextInput__VariantProps,\n    internalArgProps: PlasmicTextInput__ArgProps,\n    useBehavior,\n  }\n)\n\nexport default PlasmicTextInput\n/* prettier-ignore-end */\n","import * as React from \"react\"\nimport { PlasmicTextInput } from \"./plasmic/simple_light_landing_page/PlasmicTextInput\"\n\nfunction TextInput_(props, ref) {\n  const { plasmicProps } = PlasmicTextInput.useBehavior(props, ref)\n  return <PlasmicTextInput {...plasmicProps} />\n}\n\nconst TextInput = React.forwardRef(TextInput_)\n\nexport default Object.assign(TextInput, {\n  __plumeType: \"text-input\",\n})\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\n\nexport const ScreenContext = React.createContext(\n  \"PLEASE_RENDER_INSIDE_PROVIDER\"\n)\n/**\n *  @deprecated Plasmic now uses a custom hook for Screen variants, which is\n *  automatically included in your components. Please remove this provider\n *  from your code.\n */\n\nexport function ScreenVariantProvider(props) {\n  console.warn(\n    \"DEPRECATED: Plasmic now uses a custom hook for Screen variants, which is automatically included in your components. Please remove this provider from your code.\"\n  )\n  return props.children\n}\n\nexport const useScreenVariants = p.createUseScreenVariants(true, {\n  mobile: \"(min-width:0px) and (max-width:768px)\",\n})\n\nexport default ScreenContext\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function ChecksvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        clipRule={\"evenodd\"}\n        d={\n          \"M18.416 5.876a.75.75 0 01.208 1.04L11.42 17.721a1.75 1.75 0 01-2.871.06l-3.156-4.34a.75.75 0 111.214-.882l3.155 4.339a.25.25 0 00.41-.009l7.204-10.805a.75.75 0 011.04-.208z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default ChecksvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function LogoIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 36 18\"}\n      className={classNames(\n        \"plasmic-default__svg\",\n        className,\n        \"plasmic-default__svg plasmic__default_style-module--all--1FsbA PlasmicAuthorBio-module--svg--1OtID\"\n      )}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"url(#CuJNbcw3Ka)\"}\n        d={\n          \"M2 18C.895 18-.012 17.101.11 16.003 1.103 7.002 8.734 0 18 0s16.897 7.002 17.89 16.003C36.013 17.101 35.106 18 34 18h-2c0-7.732-6.268-14-14-14S4 10.268 4 18H2z\"\n        }\n        clipRule={\"evenodd\"}\n        fillRule={\"evenodd\"}\n      ></path>\n\n      <path\n        fill={\"url(#CuJNbcw3Kb)\"}\n        d={\"M6 18c0-6.627 5.373-12 12-12s12 5.373 12 12h-4a8 8 0 10-16 0H6z\"}\n        clipRule={\"evenodd\"}\n        fillRule={\"evenodd\"}\n      ></path>\n\n      <path\n        fill={\"url(#CuJNbcw3Kc)\"}\n        d={\n          \"M12 18a6 6 0 0112 0h-3c-.552 0-.98-.474-1.244-.959a2 2 0 00-3.512 0c-.265.485-.692.959-1.244.959h-3z\"\n        }\n        clipRule={\"evenodd\"}\n        fillRule={\"evenodd\"}\n      ></path>\n\n      <defs>\n        <linearGradient\n          gradientUnits={\"userSpaceOnUse\"}\n          y2={\"18\"}\n          x2={\"18\"}\n          y1={\"18\"}\n          x1={\"1.977\"}\n          id={\"CuJNbcw3Ka\"}\n        >\n          <stop stopColor={\"#1877F2\"}></stop>\n\n          <stop stopColor={\"#04A4F4\"} offset={\"1\"}></stop>\n        </linearGradient>\n\n        <linearGradient\n          gradientUnits={\"userSpaceOnUse\"}\n          y2={\"18\"}\n          x2={\"18\"}\n          y1={\"18\"}\n          x1={\"7.968\"}\n          id={\"CuJNbcw3Kb\"}\n        >\n          <stop stopColor={\"#2ABBA7\"}></stop>\n\n          <stop stopColor={\"#45BD62\"} offset={\"1\"}></stop>\n        </linearGradient>\n\n        <linearGradient\n          gradientUnits={\"userSpaceOnUse\"}\n          y2={\"18\"}\n          x2={\"18\"}\n          y1={\"18\"}\n          x1={\"13.953\"}\n          id={\"CuJNbcw3Kc\"}\n        >\n          <stop stopColor={\"#F02849\"}></stop>\n\n          <stop stopColor={\"#F5533D\"} offset={\"1\"}></stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nexport default LogoIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function RightArrowIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 44 34\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M28.414.586a2 2 0 10-2.828 2.828L37.172 15H2a2 2 0 100 4h35.172L25.586 30.586a2 2 0 102.828 2.828l14.912-14.911c.83-.83.83-2.176 0-3.006L28.414.586z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default RightArrowIcon\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var a = \"plasmic_library_plasmic_color_type-module--a--rvHBl\";\nexport var address = \"plasmic_library_plasmic_color_type-module--address--R1XFi\";\nexport var all = \"plasmic_library_plasmic_color_type-module--all--cXsLC\";\nexport var button = \"plasmic_library_plasmic_color_type-module--button--VMboR\";\nexport var code = \"plasmic_library_plasmic_color_type-module--code--U-y7w\";\nexport var h1 = \"plasmic_library_plasmic_color_type-module--h1--OgUTn\";\nexport var h2 = \"plasmic_library_plasmic_color_type-module--h2--LM84L\";\nexport var h3 = \"plasmic_library_plasmic_color_type-module--h3--BwHmL\";\nexport var h4 = \"plasmic_library_plasmic_color_type-module--h4--Z8aEZ\";\nexport var h5 = \"plasmic_library_plasmic_color_type-module--h5--qkras\";\nexport var h6 = \"plasmic_library_plasmic_color_type-module--h6--qeHNX\";\nexport var img = \"plasmic_library_plasmic_color_type-module--img--MZ4r1\";\nexport var input = \"plasmic_library_plasmic_color_type-module--input--KnKCe\";\nexport var li = \"plasmic_library_plasmic_color_type-module--li--VZzZf\";\nexport var ol = \"plasmic_library_plasmic_color_type-module--ol--yJeWE\";\nexport var p = \"plasmic_library_plasmic_color_type-module--p--+ul-w\";\nexport var plasmic_default__component_wrapper = \"plasmic_library_plasmic_color_type-module--plasmic_default__component_wrapper--dmdRV\";\nexport var plasmic_default__inline = \"plasmic_library_plasmic_color_type-module--plasmic_default__inline--BzGQ6\";\nexport var plasmic_default_styles = \"plasmic_library_plasmic_color_type-module--plasmic_default_styles--BOilC\";\nexport var plasmic_page_wrapper = \"plasmic_library_plasmic_color_type-module--plasmic_page_wrapper--hUOUO\";\nexport var plasmic_tokens = \"plasmic_library_plasmic_color_type-module--plasmic_tokens--X2-Hn\";\nexport var pre = \"plasmic_library_plasmic_color_type-module--pre--3lfoH\";\nexport var root_reset = \"plasmic_library_plasmic_color_type-module--root_reset--VcNgB\";\nexport var select = \"plasmic_library_plasmic_color_type-module--select--xjsIN\";\nexport var span = \"plasmic_library_plasmic_color_type-module--span--oTQI5\";\nexport var textarea = \"plasmic_library_plasmic_color_type-module--textarea--CXp7N\";\nexport var ul = \"plasmic_library_plasmic_color_type-module--ul--Bdvon\";","// extracted by mini-css-extract-plugin\nexport var a = \"plasmic_simple_light_landing_page-module--a--iI8KS\";\nexport var address = \"plasmic_simple_light_landing_page-module--address--nCsSg\";\nexport var all = \"plasmic_simple_light_landing_page-module--all--7tVqh\";\nexport var blockquote = \"plasmic_simple_light_landing_page-module--blockquote--Sd8XS\";\nexport var button = \"plasmic_simple_light_landing_page-module--button--xZ7Dc\";\nexport var code = \"plasmic_simple_light_landing_page-module--code--TIfk9\";\nexport var h1 = \"plasmic_simple_light_landing_page-module--h1--Glb5P\";\nexport var h2 = \"plasmic_simple_light_landing_page-module--h2--rWJao\";\nexport var h3 = \"plasmic_simple_light_landing_page-module--h3--Zv83D\";\nexport var h4 = \"plasmic_simple_light_landing_page-module--h4--dfA37\";\nexport var h5 = \"plasmic_simple_light_landing_page-module--h5--CWX7+\";\nexport var h6 = \"plasmic_simple_light_landing_page-module--h6--Hq8nN\";\nexport var img = \"plasmic_simple_light_landing_page-module--img--etWgx\";\nexport var input = \"plasmic_simple_light_landing_page-module--input--XsICl\";\nexport var li = \"plasmic_simple_light_landing_page-module--li--7o0vp\";\nexport var ol = \"plasmic_simple_light_landing_page-module--ol--e-fwd\";\nexport var p = \"plasmic_simple_light_landing_page-module--p--GnVAT\";\nexport var plasmic_default__blockquote = \"plasmic_simple_light_landing_page-module--plasmic_default__blockquote--XeSRw\";\nexport var plasmic_default__code = \"plasmic_simple_light_landing_page-module--plasmic_default__code--ryBK1\";\nexport var plasmic_default__component_wrapper = \"plasmic_simple_light_landing_page-module--plasmic_default__component_wrapper--nn7Dw\";\nexport var plasmic_default__h1 = \"plasmic_simple_light_landing_page-module--plasmic_default__h1--2Cl73\";\nexport var plasmic_default__h2 = \"plasmic_simple_light_landing_page-module--plasmic_default__h2--SWpQx\";\nexport var plasmic_default__h3 = \"plasmic_simple_light_landing_page-module--plasmic_default__h3--DLo0y\";\nexport var plasmic_default__h4 = \"plasmic_simple_light_landing_page-module--plasmic_default__h4--tr0K4\";\nexport var plasmic_default__h5 = \"plasmic_simple_light_landing_page-module--plasmic_default__h5--PNnAc\";\nexport var plasmic_default__h6 = \"plasmic_simple_light_landing_page-module--plasmic_default__h6--2SG3Z\";\nexport var plasmic_default__inline = \"plasmic_simple_light_landing_page-module--plasmic_default__inline--LOdHg\";\nexport var plasmic_default__ol = \"plasmic_simple_light_landing_page-module--plasmic_default__ol--jw7Sc\";\nexport var plasmic_default__pre = \"plasmic_simple_light_landing_page-module--plasmic_default__pre--fd6fF\";\nexport var plasmic_default__ul = \"plasmic_simple_light_landing_page-module--plasmic_default__ul---Z77t\";\nexport var plasmic_default_styles = \"plasmic_simple_light_landing_page-module--plasmic_default_styles--GuwdP\";\nexport var plasmic_page_wrapper = \"plasmic_simple_light_landing_page-module--plasmic_page_wrapper--wq0WO\";\nexport var plasmic_tokens = \"plasmic_simple_light_landing_page-module--plasmic_tokens--kVMnN\";\nexport var pre = \"plasmic_simple_light_landing_page-module--pre--mBhYH\";\nexport var root_reset = \"plasmic_simple_light_landing_page-module--root_reset--kOho-\";\nexport var select = \"plasmic_simple_light_landing_page-module--select--e3t8D\";\nexport var span = \"plasmic_simple_light_landing_page-module--span--y9C03\";\nexport var textarea = \"plasmic_simple_light_landing_page-module--textarea--3x5kh\";\nexport var ul = \"plasmic_simple_light_landing_page-module--ul--C5L6Q\";"],"names":["contentContainer","contentContainer___focusVisibleWithin","endIconContainer","endIconContainershowEndIcon","root","root___focusVisibleWithin","rootcolor_blue","rootcolor_clear","rootcolor_outlineBlue","rootcolor_outlineRed","rootcolor_red","rootisDisabled","rootshape_rounded","rootshowEndIcon","rootshowEndIcon_shape_rounded","rootshowEndIcon_size_compact","rootshowStartIcon","rootshowStartIcon_shape_rounded","rootshowStartIcon_size_compact","rootsize_compact","slotTargetChildren","slotTargetChildren___focusVisibleWithin","slotTargetChildrencolor_blue","slotTargetChildrencolor_clear","slotTargetChildrencolor_outlineBlue","slotTargetChildrencolor_outlineRed","slotTargetChildrencolor_red","slotTargetEndIcon","slotTargetEndIconcolor_outlineBlue","slotTargetEndIconcolor_outlineRed","slotTargetStartIcon","slotTargetStartIconcolor_outlineBlue","slotTargetStartIconcolor_outlineRed","startIconContainer","startIconContainershowStartIcon","svg__c5019","svg__jmtrq","PlasmicButton__VariantProps","Array","PlasmicButton__ArgProps","PlasmicDescendants","makeNodeComponent","nodeName","func","props","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","args","overrides","forNode","useTrigger","isTextInput","isRootFocusVisibleWithin","triggerRootFocusVisibleWithinProps","triggers","focusVisibleWithin_root","as","hasGap","className","classNames","projectcss","plasmic_library_plasmic_color_type_css","sty","hasVariant","p","defaultContents","role","value","startIcon","children","endIcon","PlasmicButton__RenderFunc","displayName","PlasmicButton","Object","assign","internalVariantProps","internalArgProps","useBehavior","ref","b","pp","showStartIconVariant","group","variant","showEndIconVariant","isDisabledVariant","contentSlot","startIconSlot","endIconSlot","plasmicProps","component","Link","platform","Button_","Button","React","__plumeType","PlasmicIconLink__VariantProps","PlasmicIconLink__ArgProps","freeBox","icon","PlasmicIconLink__RenderFunc","PlasmicIconLink","IconLink_","style","title","restProps","xmlns","viewBox","height","width","fill","d","PlasmicFooter__VariantProps","PlasmicFooter__ArgProps","textInput","button","ensureGlobalVariants","screen","useScreenVariantskqRUdDzzQOAa","href","TextInput","color","size","fontSize","placeholder","showEndIcon","PlasmicFooter__RenderFunc","PlasmicFooter","Footer_","PlasmicHeader__VariantProps","PlasmicHeader__ArgProps","link","globalVariants","PlasmicHeader__RenderFunc","PlasmicHeader","Header_","content","contentContainerhasSubtitle","contentContainerhasSubtitle_hasTitle","contentContainerhasTitle","rootcolor_dark","rootcolor_halfDark","slotTargetSubtitle","slotTargetTitle","subtitleContainer","subtitleContainerhasSubtitle","titleContainer","titleContainerhasTitle","PlasmicSection__VariantProps","PlasmicSection__ArgProps","subtitle","PlasmicSection__RenderFunc","PlasmicSection","Section_","input","input___focusVisibleWithin","inputcolor_dark","inputfontSize_small","inputisDisabled","slotTargetEndIconshowEndIcon","slotTargetStartIconshowStartIcon","startIconContainer___focusVisibleWithin","svg__adcjc","svg__ia7Xo","stroke","strokeLinecap","strokeLinejoin","strokeWidth","PlasmicTextInput__VariantProps","PlasmicTextInput__ArgProps","disabled","undefined","type","PlasmicTextInput__RenderFunc","PlasmicTextInput","TextInput_","useScreenVariants","mobile","fillRule","clipRule","gradientUnits","y2","x2","y1","x1","id","stopColor","offset","plasmic_tokens","a","all","plasmic_default_styles","plasmic_page_wrapper","root_reset"],"sourceRoot":""}